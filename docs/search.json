[{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Midhun Unnikrishnan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting started with gapxplore","text":"gapxplore small teaching package ETC5523: Communicating Data. ships tidy Gapminder panel (gm_panel), continent aggregates (gm_trends), latest-year snapshot (gm_summary), interactive Shiny app. app can: explore trends continent across years, view bubble chart countries year, compare continents single year life expectancy, GDP per capita, population. vignette shows install package, load data, make app.","code":""},{"path":[]},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"from-github-recommended","dir":"Articles","previous_headings":"Installation","what":"From GitHub (recommended)","title":"Getting started with gapxplore","text":"Replace <-repo> actual GitHub repo path assignment (e.g. ETC5523-2025/assignment-4-packages--shiny-apps-YourUser). Load package:","code":"# Option A: pak install.packages(\"pak\") pak::pak(\"<your-repo>\")  # Option B: remotes install.packages(\"remotes\") remotes::install_github(\"<your-repo>\") library(gapxplore)"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"from-a-local-checkout","dir":"Articles","previous_headings":"Installation","what":"From a local checkout","title":"Getting started with gapxplore","text":"’ve cloned repo locally:","code":"# from the project root devtools::install()   # or: remotes::install_local(\".\")"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"what-data-are-included","dir":"Articles","previous_headings":"","what":"What data are included?","title":"Getting started with gapxplore","text":"Three compact data frames ship package: gm_panel — country–year panel (1952–2007, 5-year cadence), columnscountry, continent, year, lifeExp, gdpPercap, pop. gm_summary — one row per country latest year gm_panel (usually 2007), population millions pop_mill. gm_trends — continent–year aggregates used app, columnscontinent, year, mean_lifeExp, mean_gdpPercap, pop_total.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"quick-look","dir":"Articles","previous_headings":"What data are included?","what":"Quick look","title":"Getting started with gapxplore","text":"","code":"dplyr::glimpse(gm_panel) range(gm_panel$year) unique(gm_panel$continent)  head(gm_summary) dplyr::glimpse(gm_trends)"},{"path":[]},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"trend-lines-by-continent","dir":"Articles","previous_headings":"Reproduce core visuals","what":"Trend lines by continent","title":"Getting started with gapxplore","text":"Swap GDP per capita:","code":"library(ggplot2)  ggplot(   gm_trends,   aes(year, mean_lifeExp, colour = continent) ) +   geom_line(linewidth = 1) +   labs(x = NULL, y = \"Life expectancy (years)\", colour = NULL) +   theme_minimal() +   theme(legend.position = \"bottom\") ggplot(   gm_trends,   aes(year, mean_gdpPercap, colour = continent) ) +   geom_line(linewidth = 1) +   labs(x = NULL, y = \"GDP per capita (US$)\", colour = NULL) +   theme_minimal() +   theme(legend.position = \"bottom\")"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"bubble-view-latest-year","dir":"Articles","previous_headings":"Reproduce core visuals","what":"Bubble view (latest year)","title":"Getting started with gapxplore","text":"","code":"yr <- max(gm_panel$year) latest <- dplyr::filter(gm_panel, year == yr)  ggplot(   latest,   aes(gdpPercap, lifeExp, size = pop / 1e6, colour = continent) ) +   geom_point(alpha = 0.8) +   scale_size_area(name = \"Population (millions)\", max_size = 14) +   scale_x_log10() +   labs(x = \"GDP per capita (log10)\", y = \"Life expectancy (years)\", colour = NULL) +   theme_minimal() +   theme(legend.position = \"bottom\")"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"launch-the-shiny-app","dir":"Articles","previous_headings":"","what":"Launch the Shiny app","title":"Getting started with gapxplore","text":"interactive explorer packaged inst/app/. Start :","code":"gapxplore::run_app()"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"app-tour-what-each-view-shows","dir":"Articles","previous_headings":"Launch the Shiny app","what":"App tour (what each view shows)","title":"Getting started with gapxplore","text":"Trends (continent) Line chart using continent-level aggregates across chosen year range.Metrics: life expectancy (mean), GDP per capita (mean), population (total). Bubble (countries) point country selected year.x = GDP per capita (optionally log10), y = life expectancy, size = population (millions), colour = continent. Compare (bar @ year) Bar chart continents single year chosen metric.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"example-exploration-workflows","dir":"Articles","previous_headings":"","what":"Example exploration workflows","title":"Getting started with gapxplore","text":"continent gained life expectancy since 1952? Open Trends, select full year range, compare line slopes. continents rank GDP per capita 2007? Open Compare, set Year = 2007, choose GDP per capita. countries outliers 2007? Open Bubble, Year = 2007, enable log10 x-axis, scan high/low points.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"sources-licensing","dir":"Articles","previous_headings":"","what":"Sources & licensing","title":"Getting started with gapxplore","text":"Data derived CRAN package gapminder (Gapminder Foundation, CC 3.0). See data-raw/build_gapminder_data.R reproducible build script.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"package-structure","dir":"Articles","previous_headings":"","what":"Package structure","title":"Getting started with gapxplore","text":"","code":"gapxplore/ ├─ R/ │  ├─ run_app.R                 # exported launcher │  ├─ gapxplore-package.R       # package-level docs stub │  └─ datasets-gapminder.R      # roxygen docs for gm_* datasets ├─ inst/ │  └─ app/ │     ├─ app.R                  # main Shiny app │     └─ www/ │        └─ app.css             # custom styles ├─ data/ │  ├─ gm_panel.rda │  ├─ gm_summary.rda │  └─ gm_trends.rda ├─ data-raw/ │  └─ build_gapminder_data.R    # builds and saves the datasets ├─ vignettes/ │  └─ gapxplore-getting-started.Rmd ├─ man/                         # Rd docs (generated) ├─ DESCRIPTION ├─ NAMESPACE ├─ README.Rmd / README.md └─ LICENSE / LICENSE.md"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/articles/gapxplore-getting-started.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Getting started with gapxplore","text":"Thanks R packaging ecosystem—usethis, devtools, roxygen2—shiny, ggplot2, plotly, dplyr, tidyr, scales, bslib powering interactive exploration.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Midhun Unnikrishnan. Author, maintainer.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Unnikrishnan M (2025). gapxplore: Interactive Exploration Gapminder Data. R package version 0.0.0.9000.","code":"@Manual{,   title = {gapxplore: Interactive Exploration of Gapminder Data},   author = {Midhun Unnikrishnan},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"gapxplore","dir":"","previous_headings":"","what":"gapxplore","title":"gapxplore","text":"gapxplore R package ETC5523: Communicating Data turns Gapminder dataset polished, interactive exploration. Shiny app trends, country bubbles, continent comparisons Tidy, documented datasets bundled package pkgdown website function docs getting-started vignette","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"gapxplore","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"ETC5523-2025/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7\")"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"launch-the-app","dir":"","previous_headings":"","what":"Launch the app","title":"gapxplore","text":"","code":"gapxplore::run_app()"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"data-shipped-with-the-package","dir":"","previous_headings":"","what":"Data shipped with the package","title":"gapxplore","text":"gm_panel — country–year panel (1952–2007, every 5 years) gm_trends — continent–year aggregates (means/totals) gm_summary — latest-year snapshot country","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"gapxplore","text":"See Articles → Getting started quick tour tips interpreting app’s views.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/index.html","id":"source--license","dir":"","previous_headings":"","what":"Source & license","title":"gapxplore","text":"Data derived CRAN gapminder package (Gapminder Foundation; CC 3.0).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gapxplore-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gapxplore: Interactive Gapminder Explorer — gapxplore-package","title":"gapxplore: Interactive Gapminder Explorer — gapxplore-package","text":"Tools packaging tidy Gapminder dataset Shiny app ETC5523 Assignment 4 (data, app launcher, docs).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gapxplore-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gapxplore: Interactive Gapminder Explorer — gapxplore-package","text":"Maintainer: Midhun Unnikrishnan munn0002@student.monash.edu","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"Country-level development indicators every 5 years 1952 2007. Used package's Shiny app explore trends continent year.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"","code":"data(gm_panel)"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"data frame columns: country Country name (character). continent Continent (character). One : \"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\". year Calendar year (integer), {1952, 1957, ..., 2007}. lifeExp Life expectancy birth (numeric, years). gdpPercap GDP per capita (numeric, international \\$). pop Population (integer, persons).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"Gapminder Foundation (CC 3.0), via CRAN gapminder package.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"row country–year observation (5-year intervals). Typical uses package include: Filtering continent(s) year range app, Aggregating continent-level means (life expectancy, GDP per capita), Aggregating continent-level totals (population). Units: lifeExp: years (life expectancy birth), gdpPercap: GDP per capita (inflation-adjusted international \\$), pop: persons. Coverage: Years: 1952–2007 (inclusive), every 5 years, Continents: Africa, Americas, Asia, Europe, Oceania.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gapminder country–year panel (1952–2007, 5-year cadence) — gm_panel","text":"","code":"# Basic glimpse head(gm_panel) #> # A tibble: 6 × 6 #>   country     continent  year lifeExp gdpPercap      pop #>   <fct>       <fct>     <int>   <dbl>     <dbl>    <int> #> 1 Afghanistan Asia       1952    28.8      779.  8425333 #> 2 Afghanistan Asia       1957    30.3      821.  9240934 #> 3 Afghanistan Asia       1962    32.0      853. 10267083 #> 4 Afghanistan Asia       1967    34.0      836. 11537966 #> 5 Afghanistan Asia       1972    36.1      740. 13079460 #> 6 Afghanistan Asia       1977    38.4      786. 14880372  # Continent mean life expectancy in 2007 if (requireNamespace(\"dplyr\", quietly = TRUE)) {   library(dplyr)   gm_panel |>     dplyr::filter(year == 2007) |>     dplyr::group_by(continent) |>     dplyr::summarise(mean_lifeExp = mean(lifeExp, na.rm = TRUE)) } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> # A tibble: 5 × 2 #>   continent mean_lifeExp #>   <fct>            <dbl> #> 1 Africa            54.8 #> 2 Americas          73.6 #> 3 Asia              70.7 #> 4 Europe            77.6 #> 5 Oceania           80.7  # Total population by continent in the 1990s if (requireNamespace(\"dplyr\", quietly = TRUE)) {   library(dplyr)   gm_panel |>     dplyr::filter(year >= 1990, year <= 1999) |>     dplyr::group_by(continent, year) |>     dplyr::summarise(pop_total = sum(pop, na.rm = TRUE), .groups = \"drop\") } #> # A tibble: 10 × 3 #>    continent  year  pop_total #>    <fct>     <int>      <dbl> #>  1 Africa     1992  659081517 #>  2 Africa     1997  743832984 #>  3 Americas   1992  739274104 #>  4 Americas   1997  796900410 #>  5 Asia       1992 3133292191 #>  6 Asia       1997 3383285500 #>  7 Europe     1992  558142797 #>  8 Europe     1997  568944148 #>  9 Oceania    1992   20919651 #> 10 Oceania    1997   22241430"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder latest-year snapshot by country — gm_summary","title":"Gapminder latest-year snapshot by country — gm_summary","text":"One row per country recent year gm_panel (typically 2007). Useful bubble plots ranked tables.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder latest-year snapshot by country — gm_summary","text":"","code":"data(gm_summary)"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder latest-year snapshot by country — gm_summary","text":"data frame columns: country Country (character). continent Continent (character). year Latest year present (integer, usually 2007). lifeExp Life expectancy birth (numeric, years). gdpPercap GDP per capita (numeric, international \\$). pop_mill Population millions (numeric).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gapminder latest-year snapshot by country — gm_summary","text":"Derived gm_panel (Gapminder; CC 3.0).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gapminder latest-year snapshot by country — gm_summary","text":"Derived gm_panel filtering max(year) optionally transforming population millions display.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gapminder latest-year snapshot by country — gm_summary","text":"","code":"# Top 10 countries by population (latest year) if (exists(\"gm_summary\")) {   head(gm_summary[order(-gm_summary$pop_mill), ], 10) } #> # A tibble: 10 × 6 #>    country       continent  year lifeExp gdpPercap pop_mill #>    <fct>         <fct>     <int>   <dbl>     <dbl>    <dbl> #>  1 China         Asia       2007    73.0     4959.    1319. #>  2 India         Asia       2007    64.7     2452.    1110. #>  3 United States Americas   2007    78.2    42952.     301. #>  4 Indonesia     Asia       2007    70.6     3541.     224. #>  5 Brazil        Americas   2007    72.4     9066.     190. #>  6 Pakistan      Asia       2007    65.5     2606.     169. #>  7 Bangladesh    Asia       2007    64.1     1391.     150. #>  8 Nigeria       Africa     2007    46.9     2014.     135. #>  9 Japan         Asia       2007    82.6    31656.     127. #> 10 Mexico        Americas   2007    76.2    11978.     109."},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder continent–year aggregates — gm_trends","title":"Gapminder continent–year aggregates — gm_trends","text":"Aggregated indicators continent year trend plots comparisons.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder continent–year aggregates — gm_trends","text":"","code":"data(gm_trends)"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder continent–year aggregates — gm_trends","text":"data frame columns: continent Continent (character). year Calendar year (integer). mean_lifeExp Mean life expectancy (numeric, years). mean_gdpPercap Mean GDP per capita (numeric, international \\$). pop_total Total population (integer, persons).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gapminder continent–year aggregates — gm_trends","text":"Derived gm_panel (Gapminder; CC 3.0).","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gapminder continent–year aggregates — gm_trends","text":"Created gm_panel grouping continent, year computing: mean_lifeExp: mean life expectancy, mean_gdpPercap: mean GDP per capita, pop_total: total population.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/gm_trends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gapminder continent–year aggregates — gm_trends","text":"","code":"# Simple line plot with ggplot2 (if available) if (exists(\"gm_trends\") && requireNamespace(\"ggplot2\", quietly = TRUE)) {   ggplot2::ggplot(gm_trends, ggplot2::aes(year, mean_lifeExp, colour = continent)) +     ggplot2::geom_line() }"},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the interactive app — run_app","title":"Launch the interactive app — run_app","text":"Opens packaged Shiny app inst/app.","code":""},{"path":"https://ETC5523-2025.github.io/assignment-4-packages-and-shiny-apps-MidhunUnnikrishnan7/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the interactive app — run_app","text":"","code":"run_app()"}]
