% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datasets-gapminder.R
\docType{data}
\name{gm_panel}
\alias{gm_panel}
\title{Gapminder country–year panel (1952–2007, 5-year cadence)}
\format{
A data frame with columns:
\describe{
\item{country}{Country name (character).}
\item{continent}{Continent (character). One of: "Africa", "Americas", "Asia", "Europe", "Oceania".}
\item{year}{Calendar year (integer), in \{1952, 1957, ..., 2007\}.}
\item{lifeExp}{Life expectancy at birth (numeric, years).}
\item{gdpPercap}{GDP per capita (numeric, international \$).}
\item{pop}{Population (integer, persons).}
}
}
\source{
Gapminder Foundation (CC BY 3.0), via the CRAN \pkg{gapminder} package.
}
\usage{
data(gm_panel)
}
\description{
Country-level development indicators every 5 years from 1952 to 2007.
Used by the package's Shiny app to explore trends by continent and year.
}
\details{
Each row is a country–year observation (5-year intervals).
Typical uses in this package include:
\itemize{
\item Filtering by continent(s) and year range in the app,
\item Aggregating to continent-level means (life expectancy, GDP per capita),
\item Aggregating to continent-level totals (population).
}

\strong{Units:}
\itemize{
\item \code{lifeExp}: years (life expectancy at birth),
\item \code{gdpPercap}: GDP per capita (inflation-adjusted international \$),
\item \code{pop}: persons.
}

\strong{Coverage:}
\itemize{
\item Years: 1952–2007 (inclusive), every 5 years,
\item Continents: Africa, Americas, Asia, Europe, Oceania.
}
}
\examples{
# Basic glimpse
head(gm_panel)

# Continent mean life expectancy in 2007
if (requireNamespace("dplyr", quietly = TRUE)) {
  library(dplyr)
  gm_panel |>
    dplyr::filter(year == 2007) |>
    dplyr::group_by(continent) |>
    dplyr::summarise(mean_lifeExp = mean(lifeExp, na.rm = TRUE))
}

# Total population by continent in the 1990s
if (requireNamespace("dplyr", quietly = TRUE)) {
  library(dplyr)
  gm_panel |>
    dplyr::filter(year >= 1990, year <= 1999) |>
    dplyr::group_by(continent, year) |>
    dplyr::summarise(pop_total = sum(pop, na.rm = TRUE), .groups = "drop")
}

}
\keyword{datasets}
